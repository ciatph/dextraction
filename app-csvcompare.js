/**
 * Compare the cell content of (2) CSV files per column.
 * Write the exact row matches to a new CSV file.
 * Optional: append column(s) from the base or compared CSV files to the output CSV.
 * @ciatph; 20181122
 */

 // Import the csv parser
var csvmerge = require('./scripts/csvcompare.js');

// Original raw data to get GPS points from (from james)
csvmerge.setFile('./data/Updated_PandD_2-CSV2.csv', csvmerge.TYPE_FILE_BASE);

// Final CSV data (generated by james & D)
csvmerge.setFile('./data/CassavaPandPHE-CSV2.csv', csvmerge.TYPE_FILE_COMPARE);

// Original raw data (generated)
//csvmerge.setFile('./data/data_csv_OLD_20180725_CSV.csv', csvmerge.TYPE_FILE_COMPARE);

// Set the CSV columns to check. The CSV files should have similar column names
csvmerge.setColumnsCheck([
    'fname', 
    'midname', 
    '_03lname', 
    //'noplow', 
    //'noharrow', 
    //'soil', 
    //'cropestmethod', 
    //'pdate', 
    //'varietyplanted', 
    //'freq', 
    //'pstcide_type', 
    //'srctype', 
    'w_tmax', 
    'w_tmmin', 
    'w_tavg', 
    'w_drange', 
    'w_ftmax31', 
    'w_paccum', 
    'w_pdryday', 
    'w_vpavg', 
    'w_solar'
]);


// Read the CSV files. Write matching rows to a CSV file
csvmerge.readFile(csvmerge.file1, function(){
    console.log('Data has been loaded! Base data FILE1 has ' + csvmerge.file1.csvdata.length + ' rows.');

    csvmerge.readFile(csvmerge.file2, function(){
        console.log(' --- Data has been loaded! Data to compare FILE2 has ' + csvmerge.file2.csvdata.length + ' rows.');

        // Compare file1 (final processed) and file2 (raw data)
        var index = csvmerge.compare();
        csvmerge.writeToFile(csvmerge.filtered);
        console.log('Similar records: ' + index.length);
    });    
});